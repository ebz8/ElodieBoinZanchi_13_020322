swagger: '2.0'
info:
  title: Argent Bank Transactions API
  description: API model proposal for user transactions
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'

host: localhost:3001
basePath: /api/v2
schemes:
  - http

paths:
  /user/transactions:
    post:
      tags:
        - Transactions Module
      summary: Returns a list with all user's transactions
      description: Post token to return all the user's transactions (sorted by mounth)
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        required: true
        type: string
      produces:
        - application/json
      responses:
        '200':
          description: All the transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/transaction:
    post:
      tags:
        - Transactions Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  Transaction:
    properties:
      id:
        type: string
        description: transaction id
      date:
        type: string
        description: transaction date
      description:
        type: string
        description: transaction description
      amount:
        type: string
        description: transaction amount
      balance:
        type: string
        description: transaction balance

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string






# accounts
GET /accounts
{ 
  'accounts': {
    "accountId1": {
      "checking": "string",
      "balance": "string",
    }
    "accountId2": {
      "checking": "string",
      "balance": "string",
    }
  }
}

# afficher les transactions
GET /accounts/{AccountId}/transactions
{
  "transaction1": {
    "id": "string",
    "date": "string",
    "description": "string",
    "amount": "string",
    "balance": "string",
    "type" : "string",
    "details": {
      "category": "string",
      "notes": "string"
    }
  }

  "transaction2": {
    "id": "string",
    "date": "string",
    "description": "string",
    "amount": "string",
    "balance": "string",
    "type" : "string",
    "details": {
      "category": "string",
      "notes": "string"
    }
  }    
}
# {
#   "year": {
#     "mounth": {
#       "day": {
#         "transaction1": {
#           "id": "string",
#           "date": "string",
#           "description": "string",
#           "amount": "string",
#           "balance": "string"
#         }
#         "transaction2": {
#           "id": "string",
#           "date": "string",
#           "description": "string",
#           "amount": "string",
#           "balance": "string"
#         }
#       }
#     }
#   }
# }

# ajouter / modifier ou supprimer (put null) le d√©tail d'une transaction
# PUT /accounts/{AccountId}/transactions/{transactionId}
POST transactions/{transactionId}
PUT transactions/{transactionId}
